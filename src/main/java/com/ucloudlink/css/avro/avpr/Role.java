/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.ucloudlink.css.avro.avpr;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
/** 角色信息 */
@org.apache.avro.specific.AvroGenerated
public class Role extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3907106787251365429L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Role\",\"namespace\":\"com.ucloudlink.css.avro.avpr\",\"doc\":\"角色信息\",\"fields\":[{\"name\":\"id\",\"type\":\"long\",\"doc\":\"主键ID\",\"default\":\"0\"},{\"name\":\"name\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"名字\"},{\"name\":\"roleId\",\"type\":[\"int\",\"null\"],\"doc\":\"roleId\",\"default\":\"1\"}],\"aliases\":[\"Role1\",\"Role2\"]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Role> ENCODER =
      new BinaryMessageEncoder<Role>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Role> DECODER =
      new BinaryMessageDecoder<Role>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Role> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Role> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Role>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Role to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Role from a ByteBuffer. */
  public static Role fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** 主键ID */
  @Deprecated public long id;
  /** 名字 */
  @Deprecated public java.lang.String name;
  /** roleId */
  @Deprecated public java.lang.Integer roleId;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Role() {}

  /**
   * All-args constructor.
   * @param id 主键ID
   * @param name 名字
   * @param roleId roleId
   */
  public Role(java.lang.Long id, java.lang.String name, java.lang.Integer roleId) {
    this.id = id;
    this.name = name;
    this.roleId = roleId;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return name;
    case 2: return roleId;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: name = (java.lang.String)value$; break;
    case 2: roleId = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return 主键ID
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * 主键ID
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return 名字
   */
  public java.lang.String getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * 名字
   * @param value the value to set.
   */
  public void setName(java.lang.String value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'roleId' field.
   * @return roleId
   */
  public java.lang.Integer getRoleId() {
    return roleId;
  }

  /**
   * Sets the value of the 'roleId' field.
   * roleId
   * @param value the value to set.
   */
  public void setRoleId(java.lang.Integer value) {
    this.roleId = value;
  }

  /**
   * Creates a new Role RecordBuilder.
   * @return A new Role RecordBuilder
   */
  public static com.ucloudlink.css.avro.avpr.Role.Builder newBuilder() {
    return new com.ucloudlink.css.avro.avpr.Role.Builder();
  }

  /**
   * Creates a new Role RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Role RecordBuilder
   */
  public static com.ucloudlink.css.avro.avpr.Role.Builder newBuilder(com.ucloudlink.css.avro.avpr.Role.Builder other) {
    return new com.ucloudlink.css.avro.avpr.Role.Builder(other);
  }

  /**
   * Creates a new Role RecordBuilder by copying an existing Role instance.
   * @param other The existing instance to copy.
   * @return A new Role RecordBuilder
   */
  public static com.ucloudlink.css.avro.avpr.Role.Builder newBuilder(com.ucloudlink.css.avro.avpr.Role other) {
    return new com.ucloudlink.css.avro.avpr.Role.Builder(other);
  }

  /**
   * RecordBuilder for Role instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Role>
    implements org.apache.avro.data.RecordBuilder<Role> {

    /** 主键ID */
    private long id;
    /** 名字 */
    private java.lang.String name;
    /** roleId */
    private java.lang.Integer roleId;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.ucloudlink.css.avro.avpr.Role.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.roleId)) {
        this.roleId = data().deepCopy(fields()[2].schema(), other.roleId);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Role instance
     * @param other The existing instance to copy.
     */
    private Builder(com.ucloudlink.css.avro.avpr.Role other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.roleId)) {
        this.roleId = data().deepCopy(fields()[2].schema(), other.roleId);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * 主键ID
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * 主键ID
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.ucloudlink.css.avro.avpr.Role.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * 主键ID
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * 主键ID
      * @return This builder.
      */
    public com.ucloudlink.css.avro.avpr.Role.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * 名字
      * @return The value.
      */
    public java.lang.String getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * 名字
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.ucloudlink.css.avro.avpr.Role.Builder setName(java.lang.String value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * 名字
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * 名字
      * @return This builder.
      */
    public com.ucloudlink.css.avro.avpr.Role.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'roleId' field.
      * roleId
      * @return The value.
      */
    public java.lang.Integer getRoleId() {
      return roleId;
    }

    /**
      * Sets the value of the 'roleId' field.
      * roleId
      * @param value The value of 'roleId'.
      * @return This builder.
      */
    public com.ucloudlink.css.avro.avpr.Role.Builder setRoleId(java.lang.Integer value) {
      validate(fields()[2], value);
      this.roleId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'roleId' field has been set.
      * roleId
      * @return True if the 'roleId' field has been set, false otherwise.
      */
    public boolean hasRoleId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'roleId' field.
      * roleId
      * @return This builder.
      */
    public com.ucloudlink.css.avro.avpr.Role.Builder clearRoleId() {
      roleId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Role build() {
      try {
        Role record = new Role();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.String) defaultValue(fields()[1]);
        record.roleId = fieldSetFlags()[2] ? this.roleId : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Role>
    WRITER$ = (org.apache.avro.io.DatumWriter<Role>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Role>
    READER$ = (org.apache.avro.io.DatumReader<Role>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
